import{g1 as t,g2 as e,a5 as s,q as a,s as i,T as o,S as n,u as r,at as l,a4 as p,ah as u,f$ as h,g3 as c,au as f,bC as m,ar as g,dn as d,bN as S,a6 as b,g4 as C,dG as y,ds as w,c$ as v,x as P,ao as E}from"./detailed_results-LT4I5IXe.chunk.js";import{t as k,a as N}from"./index-CxS5KVR3.chunk.js";import{ai as x,b as I,an as R,ao as M,ap as T}from"./preset_utils-Dv9lejVC.chunk.js";const V=t=>({min:t}),z=(t,e,s)=>t.matrix[Math.imul(e,t.width)+s],U=(t,e,s,a)=>{t.matrix[Math.imul(e,t.width)+s]=a},A=t=>"function"==typeof t[Symbol.iterator]?t:Object.entries(t),D=t=>!0===t||(!1===t?new Set:t instanceof Set?t:new Set(t)),B=(t,e)=>{const s=Math.round(1/e);return Math.round((t+Number.EPSILON)*s)/s},O=(t,e,s)=>{const a=z(t,e,s),i=t.variableAtPosition[t.width+e],o=t.variableAtPosition[s];t.variableAtPosition[t.width+e]=o,t.variableAtPosition[s]=i,t.positionOfVariable[i]=s,t.positionOfVariable[o]=t.width+e;const n=[];for(let r=0;r<t.width;r++){const s=z(t,e,r);Math.abs(s)>1e-16?(U(t,e,r,s/a),n.push(r)):U(t,e,r,0)}U(t,e,s,1/a);for(let r=0;r<t.height;r++){if(r===e)continue;const i=z(t,r,s);if(Math.abs(i)>1e-16){for(let s=0;s<n.length;s++){const a=n[s];U(t,r,a,z(t,r,a)-i*z(t,e,a))}U(t,r,s,-i/a)}}},L=(t,e,s,a)=>{t.push([e.variableAtPosition[e.width+s],e.variableAtPosition[a]]);for(let i=6;i<=Math.trunc(t.length/2);i++){let e=!0;for(let s=0;s<i;s++){const a=t.length-1-s,[o,n]=t[a],[r,l]=t[a-i];if(o!==r||n!==l){e=!1;break}}if(e)return!0}return!1},F=(t,e)=>{const s=[],{precision:a,maxPivots:i,checkCycles:o}=e;for(let n=0;n<i;n++){let e=0,i=a;for(let s=1;s<t.width;s++){const a=z(t,0,s);a>i&&(i=a,e=s)}if(0===e)return["optimal",B(z(t,0,0),a)];let n=0,r=1/0;for(let s=1;s<t.height;s++){const i=z(t,s,e);if(i<=a)continue;const o=z(t,s,0)/i;if(o<r&&(n=s,r=o,o<=a))break}if(0===n)return["unbounded",e];if(o&&L(s,t,n,e))return["cycled",NaN];O(t,n,e)}return["cycled",NaN]},W=(t,e)=>{const s=[],{precision:a,maxPivots:i,checkCycles:o}=e;for(let n=0;n<i;n++){let i=0,n=-a;for(let e=1;e<t.height;e++){const s=z(t,e,0);s<n&&(n=s,i=e)}if(0===i)return F(t,e);let r=0,l=-1/0;for(let e=1;e<t.width;e++){const s=z(t,i,e);if(s<-a){const a=-z(t,0,e)/s;a>l&&(l=a,r=e)}}if(0===r)return["infeasible",NaN];if(o&&L(s,t,i,r))return["cycled",NaN];O(t,i,r)}return["cycled",NaN]};var q,G={exports:{}};q=G,function(){var t,e,s,a,i,o,n,r,l,p,u,h,c,f,m;s=Math.floor,p=Math.min,e=function(t,e){return t<e?-1:t>e?1:0},l=function(t,a,i,o,n){var r;if(null==i&&(i=0),null==n&&(n=e),i<0)throw new Error("lo must be non-negative");for(null==o&&(o=t.length);i<o;)n(a,t[r=s((i+o)/2)])<0?o=r:i=r+1;return[].splice.apply(t,[i,i-i].concat(a)),a},o=function(t,s,a){return null==a&&(a=e),t.push(s),f(t,0,t.length-1,a)},i=function(t,s){var a,i;return null==s&&(s=e),a=t.pop(),t.length?(i=t[0],t[0]=a,m(t,0,s)):i=a,i},r=function(t,s,a){var i;return null==a&&(a=e),i=t[0],t[0]=s,m(t,0,a),i},n=function(t,s,a){var i;return null==a&&(a=e),t.length&&a(t[0],s)<0&&(s=(i=[t[0],s])[0],t[0]=i[1],m(t,0,a)),s},a=function(t,a){var i,o,n,r,l,p;for(null==a&&(a=e),l=[],o=0,n=(r=function(){p=[];for(var e=0,a=s(t.length/2);0<=a?e<a:e>a;0<=a?e++:e--)p.push(e);return p}.apply(this).reverse()).length;o<n;o++)i=r[o],l.push(m(t,i,a));return l},c=function(t,s,a){var i;if(null==a&&(a=e),-1!==(i=t.indexOf(s)))return f(t,0,i,a),m(t,i,a)},u=function(t,s,i){var o,r,l,p,u;if(null==i&&(i=e),!(r=t.slice(0,s)).length)return r;for(a(r,i),l=0,p=(u=t.slice(s)).length;l<p;l++)o=u[l],n(r,o,i);return r.sort(i).reverse()},h=function(t,s,o){var n,r,u,h,c,f,m,g,d;if(null==o&&(o=e),10*s<=t.length){if(!(u=t.slice(0,s).sort(o)).length)return u;for(r=u[u.length-1],h=0,f=(m=t.slice(s)).length;h<f;h++)o(n=m[h],r)<0&&(l(u,n,0,null,o),u.pop(),r=u[u.length-1]);return u}for(a(t,o),d=[],c=0,g=p(s,t.length);0<=g?c<g:c>g;0<=g?++c:--c)d.push(i(t,o));return d},f=function(t,s,a,i){var o,n,r;for(null==i&&(i=e),o=t[a];a>s&&i(o,n=t[r=a-1>>1])<0;)t[a]=n,a=r;return t[a]=o},m=function(t,s,a){var i,o,n,r,l;for(null==a&&(a=e),o=t.length,l=s,n=t[s],i=2*s+1;i<o;)(r=i+1)<o&&!(a(t[i],t[r])<0)&&(i=r),t[s]=t[i],i=2*(s=i)+1;return t[s]=n,f(t,l,s,a)},t=function(){function t(t){this.cmp=null!=t?t:e,this.nodes=[]}return t.push=o,t.pop=i,t.replace=r,t.pushpop=n,t.heapify=a,t.updateItem=c,t.nlargest=u,t.nsmallest=h,t.prototype.push=function(t){return o(this.nodes,t,this.cmp)},t.prototype.pop=function(){return i(this.nodes,this.cmp)},t.prototype.peek=function(){return this.nodes[0]},t.prototype.contains=function(t){return-1!==this.nodes.indexOf(t)},t.prototype.replace=function(t){return r(this.nodes,t,this.cmp)},t.prototype.pushpop=function(t){return n(this.nodes,t,this.cmp)},t.prototype.heapify=function(){return a(this.nodes,this.cmp)},t.prototype.updateItem=function(t){return c(this.nodes,t,this.cmp)},t.prototype.clear=function(){return this.nodes=[]},t.prototype.empty=function(){return 0===this.nodes.length},t.prototype.size=function(){return this.nodes.length},t.prototype.clone=function(){var e;return(e=new t).nodes=this.nodes.slice(0),e},t.prototype.toArray=function(){return this.nodes.slice(0)},t.prototype.insert=t.prototype.push,t.prototype.top=t.prototype.peek,t.prototype.front=t.prototype.peek,t.prototype.has=t.prototype.contains,t.prototype.copy=t.prototype.clone,t}(),q.exports=t}.call(t);const H=e(G.exports),_=(t,e)=>({matrix:new Float64Array(t),positionOfVariable:new Int32Array(e),variableAtPosition:new Int32Array(e)}),$=(t,{matrix:e,positionOfVariable:s,variableAtPosition:a},i)=>{const{width:o,height:n}=t;e.set(t.matrix);for(let l=0;l<i.length;l++){const[s,a,r]=i[l],p=(n+l)*o,u=t.positionOfVariable[a];if(u<o)e[p]=s*r,e.fill(0,p+1,p+o),e[p+u]=s;else{const t=(u-o)*o;e[p]=s*(r-e[t]);for(let a=1;a<o;a++)e[p+a]=-s*e[t+a]}}s.set(t.positionOfVariable),a.set(t.variableAtPosition);const r=o+n+i.length;for(let l=o+n;l<r;l++)s[l]=l,a[l]=l;return{matrix:e.subarray(0,t.matrix.length+o*i.length),width:o,height:n+i.length,positionOfVariable:s.subarray(0,r),variableAtPosition:a.subarray(0,r)}},j=(t,e)=>{let s=0,a=0,i=0;for(let o=0;o<e.length;o++){const n=e[o],r=t.positionOfVariable[n]-t.width;if(r<0)continue;const l=z(t,r,0),p=Math.abs(l-Math.round(l));p>s&&(s=p,a=n,i=l)}return[a,i,s]},Y=({tableau:t,sign:e,variables:s},a,i,{precision:o,includeZeroVariables:n})=>{if("optimal"===a||"timedout"===a&&!Number.isNaN(i)){const r=[];for(let e=0;e<s.length;e++){const[a]=s[e],i=t.positionOfVariable[e+1]-t.width,l=i>=0?z(t,i,0):0;l>o?r.push([a,B(l,o)]):n&&r.push([a,0])}return{status:a,result:-e*i,variables:r}}if("unbounded"===a){const a=t.variableAtPosition[i]-1;return{status:"unbounded",result:e*(1/0),variables:0<=a&&a<s.length?[[s[a][0],1/0]]:[]}}return{status:a,result:NaN,variables:[]}},Z={precision:1e-8,checkCycles:!1,maxPivots:8192,tolerance:0,timeout:1/0,maxIterations:32768,includeZeroVariables:!1},J=(t,e)=>{const s=(t=>{const{direction:e,objective:s,integers:a,binaries:i}=t,o="minimize"===e?-1:1,n=A(t.constraints),r=A(t.variables),l=Array.isArray(r)?r:Array.from(r),p=[],u=[];if(null!=a||null!=i){const t=D(i),e=!0===t||D(a);for(let s=1;s<=l.length;s++){const[a]=l[s-1];!0===t||t.has(a)?(p.push(s),u.push(s)):(!0===e||e.has(a))&&u.push(s)}}const h=new Map;for(const[y,w]of n){const t=h.get(y)??{row:NaN,lower:-1/0,upper:1/0};t.lower=Math.max(t.lower,w.equal??w.min??-1/0),t.upper=Math.min(t.upper,w.equal??w.max??1/0),h.has(y)||h.set(y,t)}let c=1;for(const y of h.values())y.row=c,c+=(Number.isFinite(y.lower)?1:0)+(Number.isFinite(y.upper)?1:0);const f=l.length+1,m=c+p.length,g=f+m,d=new Float64Array(f*m),S=new Int32Array(g),b=new Int32Array(g),C={matrix:d,width:f,height:m,positionOfVariable:S,variableAtPosition:b};for(let y=0;y<g;y++)S[y]=y,b[y]=y;for(let y=1;y<f;y++)for(const[t,e]of A(l[y-1][1])){t===s&&U(C,0,y,o*e);const a=h.get(t);null!=a&&(Number.isFinite(a.upper)?(U(C,a.row,y,e),Number.isFinite(a.lower)&&U(C,a.row+1,y,-e)):Number.isFinite(a.lower)&&U(C,a.row,y,-e))}for(const y of h.values())Number.isFinite(y.upper)?(U(C,y.row,0,y.upper),Number.isFinite(y.lower)&&U(C,y.row+1,0,-y.lower)):Number.isFinite(y.lower)&&U(C,y.row,0,-y.lower);for(let y=0;y<p.length;y++){const t=c+y;U(C,t,0,1),U(C,t,p[y],1)}return{tableau:C,sign:o,variables:l,integers:u}})(t),a={...Z,...e},[i,o]=W(s.tableau,a);if(0===s.integers.length||"optimal"!==i)return Y(s,i,o,a);{const[t,e,i]=((t,e,s)=>{const{tableau:a,sign:i,integers:o}=t,{precision:n,maxIterations:r,tolerance:l,timeout:p}=s,[u,h,c]=j(a,o);if(c<=n)return[t,"optimal",e];const f=new H(((t,e)=>t[0]-e[0]));f.push([e,[[-1,u,Math.ceil(h)]]]),f.push([e,[[1,u,Math.floor(h)]]]);const m=2*o.length,g=a.matrix.length+m*a.width,d=a.positionOfVariable.length+m;let S=_(g,d),b=_(g,d);const C=e*(1-i*l),y=p+Date.now();let w=Date.now()>=y,v=!1,P=1/0,E=a,k=0;for(;k<r&&!f.empty()&&P>=C&&!w;){const[t,e]=f.pop();if(t>P)break;const i=$(a,S,e),[r,l]=W(i,s);if("optimal"===r&&l<P){const[t,s,a]=j(i,o);if(a<=n){v=!0,P=l,E=i;const t=b;b=S,S=t}else{const a=[],i=[];for(let s=0;s<e.length;s++){const o=e[s],[n,r]=o;r===t?n<0?i.push(o):a.push(o):(a.push(o),i.push(o))}i.push([1,t,Math.floor(s)]),a.push([-1,t,Math.ceil(s)]),f.push([l,a]),f.push([l,i])}}w=Date.now()>=y,k++}const N=(w||k>=r)&&!f.empty()&&P>=C?"timedout":v?"optimal":"infeasible";return[{...t,tableau:E},N,v?P:NaN]})(s,o,a);return Y(t,e,i,a)}},K=[s.StatHitRating,s.StatCritRating,s.StatHasteRating,s.StatExpertiseRating,s.StatMasteryRating,s.StatDodgeRating,s.StatParryRating],Q={[s.StatMasteryRating]:()=>a(i,null,"Total ",a("strong",null,"percentage")),[s.StatHasteRating]:()=>a(i,null,"Final percentage value ",a("strong",null,"including")," all buffs/gear.")};class X{constructor(t,e){this.statTooltips={},this.additionalSoftCapTooltipInformation={},this.freezeItemSlotsChangeEmitter=new o,this.freezeItemSlots=!1,this.frozenItemSlots=new Map,this.previousReforges=new Map,this.currentReforges=new Map,this.simUI=t,this.player=t.player,this.playerClass=this.player.getClass(),this.isExperimental=e?.experimental,this.isHybridCaster=[n.SpecBalanceDruid,n.SpecShadowPriest,n.SpecElementalShaman].includes(this.player.getSpec()),this.sim=t.sim,this.defaults=t.individualConfig.defaults,this.getEPDefaults=e?.getEPDefaults,this.updateSoftCaps=e?.updateSoftCaps,this.updateGearStatsModifier=e?.updateGearStatsModifier,this._softCapsConfig=this.defaults.softCapBreakpoints||[],this.statTooltips={...Q,...e?.statTooltips},this.additionalSoftCapTooltipInformation={...e?.additionalSoftCapTooltipInformation},this.statSelectionPresets=e?.statSelectionPresets,this._statCaps=this.statCaps,this.enableBreakpointLimits=!!e?.enableBreakpointLimits;const s={label:"Suggest Reforges",cssClass:"suggest-reforges-action-button flex-grow-1",onClick:async({currentTarget:t})=>{const e=t;e&&(e.classList.add("loading"),e.disabled=!0);try{performance.mark("reforge-optimization-start"),await this.optimizeReforges(),this.onReforgeDone()}catch(s){this.onReforgeError(s)}finally{performance.mark("reforge-optimization-end"),e&&(e.classList.remove("loading"),e.disabled=!1)}}},l={cssClass:"suggest-reforges-button-settings",children:a(i,null,a("i",{className:"fas fa-cog"}))},{group:p,children:[u,h]}=t.addActionGroup([s,l],{cssClass:r("suggest-reforges-settings-group d-flex",this.isExperimental&&!this.player.sim.getShowExperimental()&&"hide")});this.bindToggleExperimental(p),this.softCapsConfig?.length&&k(u,{theme:"suggest-reforges-softcaps",placement:"bottom",maxWidth:310,interactive:!0,onShow:t=>t.setContent(this.buildReforgeButtonTooltip())}),k(h,{placement:"bottom",content:"Change Reforge Optimizer settings"}),this.buildContextMenu(h)}bindToggleExperimental(t){const e=()=>t.classList[this.isExperimental&&!this.player.sim.getShowExperimental()?"add":"remove"]("hide");e(),this.player.sim.showExperimentalChangeEmitter.on((()=>{e()}))}get softCapsConfig(){return this.updateSoftCaps?.(l.cloneSoftCaps(this._softCapsConfig))||this._softCapsConfig}get softCapsConfigWithLimits(){if(!this.enableBreakpointLimits)return this.softCapsConfig;const t=l.cloneSoftCaps(this.softCapsConfig);for(const[e,s]of this.player.getBreakpointLimits().asUnitStatArray()){if(!s)continue;const a=t.find((t=>t.unitStat.equals(e)));a&&(a.breakpoints=a.breakpoints.filter((t=>t<=s)))}return t}get statCaps(){return this.sim.getUseCustomEPValues()?this.player.getStatCaps():this.defaults.statCaps||new p}setStatCap(t,e){return this._statCaps=this._statCaps.withUnitStat(t,e),this.sim.getUseCustomEPValues()&&this.player.setStatCaps(o.nextEventID(),this._statCaps),this.statCaps}setDefaultStatCaps(){return this._statCaps=this.defaults.statCaps||new p,this.player.setStatCaps(o.nextEventID(),this._statCaps),this.statCaps}get preCapEPs(){let t=this.sim.getUseCustomEPValues()?this.player.getEpWeights():this.getEPDefaults?.(this.player)||this.defaults.epWeights;return this.isHybridCaster&&(t=t.withStat(s.StatSpirit,.01)),t}static checkWeights(t,e,a){let i=t;for(const o of[s.StatHitRating,s.StatCritRating,s.StatHasteRating]){const s=u.getChildren(o);if(s.map((e=>t.getPseudoStat(e))).some((t=>0!==t)))i=i.withStat(o,0);else for(const n of s)if(h(n,e,a)){const e=u.fromPseudoStat(n).convertPercentToRating(t.getStat(o));i=i.withPseudoStat(n,e),i=i.withStat(o,0);break}}return i}buildReforgeButtonTooltip(){return a(i,null,a("p",null,"The following breakpoints have been implemented for this spec:"),a("table",{className:"w-100"},a("tbody",null,this.softCapsConfigWithLimits?.map((({unitStat:t,breakpoints:e,capType:s,postCapEPs:o},n)=>a(i,null,a("tr",null,a("th",{className:"text-nowrap",colSpan:2},t.getShortName(this.playerClass)),a("td",{className:"text-end"},c.get(s))),this.additionalSoftCapTooltipInformation[t.getRootStat()]&&a(i,null,a("tr",null,a("td",{colSpan:3},this.additionalSoftCapTooltipInformation[t.getRootStat()]?.())),a("tr",null,a("td",{colSpan:3,className:"pb-2"}))),a("tr",null,a("th",{className:"text-end"},a("em",null,"%")),a("th",{colSpan:2,className:"text-nowrap text-end"},a("em",null,"Post cap EP"))),e.map(((e,i)=>a("tr",null,a("td",{className:"text-end"},this.breakpointValueToDisplayPercentage(e,t)),a("td",{colSpan:2,className:"text-end"},t.convertEpToRatingScale(s===f.TypeThreshold?o[0]:o[i]).toFixed(2))))),n!==this.softCapsConfigWithLimits.length-1&&a(i,null,a("tr",null,a("td",{colSpan:3,className:"border-bottom pb-2"})),a("tr",null,a("td",{colSpan:3,className:"pb-2"})))))))))}setFreezeItemSlots(t,e){this.freezeItemSlots!==e&&(this.freezeItemSlots=e,this.frozenItemSlots.clear(),this.freezeItemSlotsChangeEmitter.emit(t))}buildContextMenu(t){const e=k(t,{interactive:!0,trigger:"click",theme:"reforge-optimiser-popover",placement:"right-start",onShow:t=>{const e=new m(null,this.player,{id:"reforge-optimizer-enable-custom-ep-weights",label:"Use custom EP Weights",inline:!0,changedEvent:()=>this.sim.useCustomEPValuesChangeEmitter,getValue:()=>this.sim.getUseCustomEPValues(),setValue:(t,e,s)=>{this.sim.setUseCustomEPValues(t,s)}});let s=null;this.softCapsConfig?.length&&(s=new m(null,this.player,{id:"reforge-optimizer-enable-soft-cap-breakpoints",label:"Use soft cap breakpoints",inline:!0,changedEvent:()=>this.sim.useSoftCapBreakpointsChangeEmitter,getValue:()=>this.sim.getUseSoftCapBreakpoints(),setValue:(t,e,s)=>{this.sim.setUseSoftCapBreakpoints(t,s)}}));const o=new m(null,this.player,{id:"reforge-optimizer-freeze-item-slots",label:"Freeze item slots",labelTooltip:'Flag one or more item slots to be "frozen", which will prevent the optimizer from changing the Reforge in that slot from its current setting. This can be useful for hybrid classes who use the same gear piece for multiple raid roles.',inline:!1,changedEvent:()=>this.freezeItemSlotsChangeEmitter,getValue:()=>this.freezeItemSlots,setValue:(t,e,s)=>{this.setFreezeItemSlots(t,s)}}),n=P();t.setContent(a(i,null,e.rootElem,a("div",{ref:n,className:r("mb-0",this.sim.getUseCustomEPValues()&&"hide")},a("p",null,"This will enable modification of the default EP weights and setting custom stat caps."),a("p",null,"Ep weights can be modified in the Stat Weights editor."),a("p",null,"If you want to hard cap a stat make sure to put the EP for that stat higher.")),this.buildCapsList({useCustomEPValuesInput:e,description:n.value}),s?.rootElem,this.buildSoftCapBreakpointsLimiter({useSoftCapBreakpointsInput:s}),o.rootElem,this.buildFrozenSlotsInputs(),this.buildEPWeightsToggle({useCustomEPValuesInput:e})))},onHidden:()=>{e.setContent(a(i,null))}})}buildFrozenSlotsInputs(){const t=this.player.getGear().getItemSlots(),e=Math.floor(t.length/2)+1,s=[];for(let a=0;a<e;a++)s.push(t.slice(2*a,2*(a+1)));const i=P();return a("table",{ref:i},s.map((t=>{const e=P();return a("tr",{ref:e},t.map((t=>{const e=new m(null,this.player,{id:"reforge-optimizer-freeze-"+g[t],label:d.get(t),changedEvent:()=>this.freezeItemSlotsChangeEmitter,getValue:()=>this.frozenItemSlots.get(t)||!1,setValue:(e,s,a)=>{this.frozenItemSlots.set(t,a)},showWhen:()=>this.freezeItemSlots});return a("td",null,e.rootElem)})))})))}buildCapsList({useCustomEPValuesInput:t,description:e}){const s={changedEvent:t=>o.onAny([this.sim.useSoftCapBreakpointsChangeEmitter,this.player.statCapsChangeEmitter])},n=P(),l=P(),p=P(),u=a("table",{ref:n,className:r("reforge-optimizer-stat-cap-table mb-2",!this.sim.getUseCustomEPValues()&&"hide")},a("thead",null,a("tr",null,a("th",{colSpan:3,className:"pb-3"},a("div",{className:"d-flex"},a("h6",{className:"content-block-title mb-0 me-1"},"Edit stat caps"),a("button",{ref:l,className:"d-inline"},a("i",{className:"fa-regular fa-circle-question"})),a("button",{ref:p,className:"d-inline ms-auto",onclick:()=>this.setDefaultStatCaps()},a("i",{className:"fas fa-arrow-rotate-left"}))))),a("tr",null,a("th",null,"Stat"),a("th",{colSpan:2,className:"text-end"},"%"))),a("tbody",null,this.simUI.individualConfig.displayStats.map((e=>{if(!e.hasRootStat())return;const o=e.getRootStat();if(!K.includes(o))return;const n=P(),r=e.getShortName(this.player.getClass()),l={getValue:()=>this.toVisualUnitStatPercentage(this.statCaps.getUnitStat(e),e),setValue:(t,s,a)=>{this.setStatCap(e,this.toDefaultUnitStatValue(a,e))}},p=new x(null,this.player,{id:`reforge-optimizer-${r}-percentage`,float:!0,maxDecimalDigits:5,showZeroes:!1,positive:!0,extraCssClasses:["mb-0"],enableWhen:()=>this.isAllowedToOverrideStatCaps||!this.softCapsConfig.some((t=>t.unitStat.equals(e))),...s,...l}),u=this.statSelectionPresets?.find((t=>t.unitStat.equals(e)))?.presets,h=u?new I(null,this.player,{id:`reforge-optimizer-${r}-presets`,extraCssClasses:["mb-0"],label:"",values:[{name:"Select preset",value:0},...[...u.keys()].map((t=>{const e=u.get(t);return{name:`${t} - ${e.toFixed(2)}%`,value:e}}))].sort(((t,e)=>t.value-e.value)),enableWhen:()=>this.isAllowedToOverrideStatCaps||!this.softCapsConfig.some((t=>t.unitStat.equals(e))),...s,...l}):null,c=this.statTooltips[o],f=P(),m=a(i,null,a("tr",{ref:n,className:"reforge-optimizer-stat-cap-item"},a("td",null,a("div",{className:"reforge-optimizer-stat-cap-item-label"},r," ",c&&a("button",{ref:f,className:"d-inline"},a("i",{className:"fa-regular fa-circle-question"})))),a("td",{colSpan:2},p.rootElem)),h&&a("tr",null,a("td",null),a("td",{colSpan:2},h.rootElem))),g=c?k(f.value,{content:c}):null;return t.addOnDisposeCallback((()=>g?.destroy())),m}))));if(l.value){const e=k(l.value,{content:"Stat caps are the maximum amount of a stat that can be gained from Reforging. If a stat exceeds its cap, the optimizer will attempt to reduce it to the cap value."});t.addOnDisposeCallback((()=>e.destroy()))}if(p.value){const e=k(p.value,{content:"Reset to stat cap defaults"});t.addOnDisposeCallback((()=>e.destroy()))}const h=this.sim.useCustomEPValuesChangeEmitter.on((()=>{const t=this.sim.getUseCustomEPValues();n.value?.classList[t?"remove":"add"]("hide"),e?.classList[t?"add":"remove"]("hide")}));return t.addOnDisposeCallback((()=>{u.remove(),h.dispose()})),u}buildEPWeightsToggle({useCustomEPValuesInput:t}){const e=["mt-3"];this.sim.getUseCustomEPValues()||e.push("hide");const s=R(null,this.simUI,{extraCssClasses:e,loadOnly:!0}),o=this.sim.useCustomEPValuesChangeEmitter.on((()=>{const t=this.sim.getUseCustomEPValues();s.rootElem?.classList[t?"remove":"add"]("hide")}));return t.addOnDisposeCallback((()=>{s.dispose(),s.rootElem.remove(),o.dispose()})),a(i,null,s.rootElem,this.simUI.epWeightsModal&&a("button",{className:"btn btn-outline-primary",onclick:()=>{this.simUI.epWeightsModal?.open(),N()}},"Edit weights"))}buildSoftCapBreakpointsLimiter({useSoftCapBreakpointsInput:t}){if(!this.enableBreakpointLimits||!t)return null;const e=P(),s=P(),n=a("table",{ref:e,className:r("reforge-optimizer-stat-cap-table mb-2",!this.sim.getUseSoftCapBreakpoints()&&"hide")},a("thead",null,a("tr",null,a("th",{colSpan:3,className:"pb-3"},a("div",{className:"d-flex"},a("h6",{className:"content-block-title mb-0 me-1"},"Breakpoint limit"),a("button",{ref:s,className:"d-inline"},a("i",{className:"fa-regular fa-circle-question"})))))),a("tbody",null,this.softCapsConfig.filter((t=>t.capType===f.TypeThreshold&&t.breakpoints.length>1)).map((({breakpoints:t,unitStat:e})=>{if(!e.hasRootStat())return;const s=e.getRootStat();if(!K.includes(s))return;const n=P(),r=e.getShortName(this.player.getClass()),l=t?new I(null,this.player,{id:`reforge-optimizer-${r}-presets`,extraCssClasses:["mb-0"],label:"",values:[{name:"No limit set",value:0},...t.map((t=>({name:`${this.breakpointValueToDisplayPercentage(t,e)}%`,value:t})))].sort(((t,e)=>t.value-e.value)),changedEvent:t=>o.onAny([this.sim.useSoftCapBreakpointsChangeEmitter]),getValue:()=>this.player.getBreakpointLimits().getUnitStat(e)||0,setValue:(t,s,a)=>{this.player.setBreakpointLimits(t,this.player.getBreakpointLimits().withUnitStat(e,a))}}):null;if(!l?.rootElem)return null;return a(i,null,a("tr",{ref:n,className:"reforge-optimizer-stat-cap-item"},a("td",null,a("div",{className:"reforge-optimizer-stat-cap-item-label"},r)),a("td",{colSpan:2},l.rootElem)))}))));if(s.value){const e=k(s.value,{content:"Allows you to set a custom breakpoint limit."});t.addOnDisposeCallback((()=>e.destroy()))}const l=this.sim.useSoftCapBreakpointsChangeEmitter.on((()=>{const t=this.sim.getUseSoftCapBreakpoints();e.value?.classList[t?"remove":"add"]("hide")}));return t.addOnDisposeCallback((()=>{n.remove(),l?.dispose()})),n}get isAllowedToOverrideStatCaps(){return!(this.sim.getUseSoftCapBreakpoints()&&this.softCapsConfig)}get processedStatCaps(){let t=this.statCaps;return this.isAllowedToOverrideStatCaps||this.softCapsConfigWithLimits.forEach((({unitStat:e})=>{t=t.withUnitStat(e,0)})),t}async optimizeReforges(){const t=this.player.getGear();this.previousReforges=t.getAllReforges();const e=t.withoutReforges(this.player.canDualWield2H(),this.frozenItemSlots),s=await this.updateGear(e),a=s.computeStatCapsDelta(this.processedStatCaps),i=this.computeReforgeSoftCaps(s),o=X.checkWeights(this.preCapEPs,a,i),n=this.buildYalpsVariables(e,o),r=this.buildYalpsConstraints(e);await this.solveModel(e,o,a,i,n,r),this.currentReforges=this.player.getGear().getAllReforges()}async updateGear(t){this.player.setGear(o.nextEventID(),t),await this.sim.updateCharacterStats(o.nextEventID());let e=p.fromProto(this.player.getCurrentStats().finalStats);return e=e.addStat(s.StatMasteryRating,this.player.getBaseMastery()*S),this.updateGearStatsModifier&&(e=this.updateGearStatsModifier(e)),e}computeReforgeSoftCaps(t){const e=[];return this.isAllowedToOverrideStatCaps||this.softCapsConfigWithLimits.slice().forEach((s=>{let a=s.postCapEPs.slice();const i=[];for(const e of s.breakpoints)i.push(t.computeGapToCap(s.unitStat,e));s.capType==f.TypeThreshold&&(i.reverse(),a=Array(i.length).fill(a[0])),e.push(new l(s.unitStat,i,s.capType,a))})),e}buildYalpsVariables(t,e){const s=new Map,a=this.simUI.individualConfig.epStats;for(const i of t.getItemSlots()){const o=t.getEquippedItem(i);if(o&&!this.frozenItemSlots.get(i))for(const t of this.player.getAvailableReforgings(o)){if(!a.includes(t.toStat))continue;const o=`${i}_${t.id}`,n=new Map;n.set(g[i],1),this.applyReforgeStat(n,t.fromStat,t.fromAmount,e),this.applyReforgeStat(n,t.toStat,t.toAmount,e),s.set(o,n)}}return s}applyReforgeStat(t,e,a,i){if(e==s.StatSpirit&&this.isHybridCaster){let e=a/E;switch(this.player.getSpec()){case n.SpecBalanceDruid:e*=.5*this.player.getTalents().balanceOfPower;break;case n.SpecShadowPriest:e*=.5*this.player.getTalents().twistedFaith;break;case n.SpecElementalShaman:e*=[0,.33,.66,1][this.player.getTalents().elementalPrecision]}this.setPseudoStatCoefficient(t,b.PseudoStatSpellHitPercent,e)}if(0==i.getStat(e))for(const s of u.getChildren(e))0!=i.getPseudoStat(s)&&this.setPseudoStatCoefficient(t,s,u.fromPseudoStat(s).convertRatingToPercent(a));else t.set(s[e],a)}setPseudoStatCoefficient(t,e,s){const a=t.get(b[e])||0;t.set(b[e],a+s)}buildYalpsConstraints(t){const e=new Map;for(const s of t.getItemSlots())e.set(g[s],{max:1});return e}async solveModel(t,e,s,a,i,o){const n=this.updateReforgeScores(i,e),r=J({direction:"maximize",objective:"score",constraints:o,variables:n,binaries:!0},{timeout:6e4,maxIterations:1/0,tolerance:.01}),l=await this.applyLPSolution(t,r),[p,u,h]=this.checkCaps(r,s,a,n,o,e);p&&(await C(100),await this.solveModel(l,h,s,a,n,u))}updateReforgeScores(t,e){const a=new Map;for(const[i,o]of t.entries()){let t=0;const n=new Map;for(const[a,i]of o.entries())if(n.set(a,i),a.includes("PseudoStat")){const s=b[a];t+=e.getPseudoStat(s)*i}else if(a.includes("Stat")){const o=s[a];t+=e.getStat(o)*i}n.set("score",t),a.set(i,n)}return a}async applyLPSolution(t,e){let s=t.withoutReforges(this.player.canDualWield2H(),this.frozenItemSlots);for(const[a,i]of e.variables){const e=a.split("_"),i=parseInt(e[0]),o=parseInt(e[1]),n=t.getEquippedItem(i);n&&(s=s.withEquippedItem(i,n.withReforge(this.sim.db.getReforgeById(o)),this.player.canDualWield2H()))}return await this.updateGear(s),s}checkCaps(t,e,a,i,o,n){let r=new p;for(const[p,c]of t.variables)for(const[t,e]of i.get(p).entries())if(t.includes("PseudoStat")){const s=b[t];r=r.addPseudoStat(s,e)}else if(t.includes("Stat")){const a=s[t];r=r.addStat(a,e)}let l=!1;const u=new Map(o);let h=n;for(const[s,p]of r.asUnitStatArray()){const t=e.getUnitStat(s),a=s.getKey();0!==t&&p>t&&!o.has(a)&&(u.set(a,V(t)),l=!0,h=h.withUnitStat(s,0))}for(;!l&&a.length>0;){const t=a[0],e=t.unitStat,s=e.getKey(),i=r.getUnitStat(e);let o=0;for(const a of t.breakpoints){if(i>a){u.set(s,V(a)),h=h.withUnitStat(e,t.postCapEPs[o]),l=!0;break}o++}t.capType==f.TypeSoftCap&&(t.breakpoints=t.breakpoints.slice(o+1),t.postCapEPs=t.postCapEPs.slice(o+1)),t.capType!=f.TypeThreshold&&0!=t.breakpoints.length||a.shift()}return[l,u,h]}get baseMastery(){return this.player.getBaseMastery()*S}toVisualTotalMasteryPercentage(t,e){return e-this.baseMastery<=0?t=0:t*=this.player.getMasteryPerPointModifier(),t}toVisualUnitStatPercentage(t,e){const a=t;let i=e.convertDefaultUnitsToPercent(a);return e.equalsStat(s.StatMasteryRating)&&(i=this.toVisualTotalMasteryPercentage(i,a)),i}toDefaultUnitStatValue(t,e){let a=e.convertPercentToDefaultUnits(t);return e.equalsStat(s.StatMasteryRating)&&(a/=this.player.getMasteryPerPointModifier()),a}breakpointValueToDisplayPercentage(t,e){return e.equalsStat(s.StatMasteryRating)?(t/S*this.player.getMasteryPerPointModifier()).toFixed(2):e.convertDefaultUnitsToPercent(t).toFixed(2)}onReforgeDone(){const t=this.player.getGear().getItemSlots(),e=new Map;for(const a of t){const t=this.previousReforges.get(a),s=this.currentReforges.get(a);y.equals(t?.reforge,s?.reforge)||e.set(a,s)}const s=e.size,o=P(),n=a(i,null,a("p",{className:"mb-0"},"The following items were reforged:"),a("ul",null,[...e].map((([t,e])=>{if(e){const s=d.get(t),{fromStat:i,toStat:o}=e,n=w.get(i),r=w.get(o);return a("li",null,s,": ",n," → ",r)}return a("li",null,d.get(t),": Removed reforge")}))),a("div",{ref:o}));if(s){const t=v.toJson(this.simUI.toProto());t&&new M(o.value,{extraCssClasses:["btn-outline-primary"],getContent:()=>JSON.stringify(t),text:"Copy to Reforge Lite"})}new T({variant:"success",body:s?n:a(i,null,"No reforge changes were made!"),delay:s?5e3:3e3})}onReforgeError(t){new T({variant:"error",body:"Reforge optimization failed. Please try again, or report the issue if it persists."})}}export{X as R};
